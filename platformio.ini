; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; [env:nucleo_f091rc]
; platform = ststm32
; board = nucleo_f091rc
; framework = stm32cube
; upload_command = ${platformio.packages_dir}/tool-openocd/bin/openocd -f openocd.cfg -c "program .pio/build/nucleo_f091rc/firmware.elf verify reset exit"
; debug_server = 
;     ${platformio.packages_dir}/tool-openocd/bin/openocd
;     -f
;     openocd.cfg
; build_src_flags = -DSTM32F091 -O0
; build_src_filter = +<*> -<EWARM>
; build_flags = 
;     -I lib/STM32F0xx_HAL_Driver/Inc
;     -I lib/CMSIS/Include
;     -I lib/CMSIS/Device/ST/STM32F0xx/Include
;     -I src/core/Inc
;     -I src/drivers
;     -I src/app

; upload_protocol = stlink
; debug_init_break = tbreak main
; monitor_speed = 115200
; monitor_eol = LF

[env:nucleo_f091rc]
platform = ststm32
board = nucleo_f091rc
framework = stm32cube
upload_command = ${platformio.packages_dir}/tool-openocd/bin/openocd -f openocd.cfg -c "program .pio/build/nucleo_f091rc/firmware.elf verify reset exit"
debug_server = 
    ${platformio.packages_dir}/tool-openocd/bin/openocd
    -f
    openocd.cfg

build_src_filter = 
    +<*> 
    -<EWARM>

build_flags = 
    -I src/core/Inc
    -I src/drivers
    -I src/app
    -DSTM32F091
    -O0

# C++ specific flags
build_src_flags = 
    -DSTM32F091
    -O0
build_unflags = -std=gnu11
build_cxxflags = 
    -std=gnu++11
    -fno-rtti
    -fno-exceptions

upload_protocol = stlink
debug_init_break = tbreak main
monitor_speed = 115200
monitor_eol = LF